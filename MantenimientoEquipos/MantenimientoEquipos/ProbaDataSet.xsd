<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ProbaDataSet" targetNamespace="http://tempuri.org/ProbaDataSet.xsd" xmlns:mstns="http://tempuri.org/ProbaDataSet.xsd" xmlns="http://tempuri.org/ProbaDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ProbaConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ProbaConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MantenimientoEquipos.Properties.Settings.GlobalReference.Default.ProbaConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TodoTableAdapter" GeneratorDataComponentClassName="TodoTableAdapter" Name="Todo" UserDataComponentName="TodoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ProbaConnectionString (Settings)" DbObjectName="Proba.dbo.Todo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Todo] WHERE (([Data1] = @Original_Data1) AND ((@IsNull_Data2 = 1 AND [Data2] IS NULL) OR ([Data2] = @Original_Data2)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Data1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Data1" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Data2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Data2" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Data2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Data2" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Todo] ([Data2]) VALUES (@Data2);
SELECT Data1, Data2 FROM Todo WHERE (Data1 = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Data2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Data2" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Data1, Data2 FROM dbo.Todo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Todo] SET [Data2] = @Data2 WHERE (([Data1] = @Original_Data1) AND ((@IsNull_Data2 = 1 AND [Data2] IS NULL) OR ([Data2] = @Original_Data2)));
SELECT Data1, Data2 FROM Todo WHERE (Data1 = @Data1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Data2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Data2" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Data1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Data1" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Data2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Data2" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Data2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Data2" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Data1" ColumnName="Data1" DataSourceName="Proba.dbo.Todo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Data1" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Data1" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Data1" DataSetColumn="Data1" />
              <Mapping SourceColumn="Data2" DataSetColumn="Data2" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ProbaDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="ProbaDataSet" msprop:Generator_DataSetName="ProbaDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Todo" msprop:Generator_RowEvHandlerName="TodoRowChangeEventHandler" msprop:Generator_RowDeletedName="TodoRowDeleted" msprop:Generator_RowDeletingName="TodoRowDeleting" msprop:Generator_RowEvArgName="TodoRowChangeEvent" msprop:Generator_TablePropName="Todo" msprop:Generator_RowChangedName="TodoRowChanged" msprop:Generator_RowChangingName="TodoRowChanging" msprop:Generator_TableClassName="TodoDataTable" msprop:Generator_RowClassName="TodoRow" msprop:Generator_TableVarName="tableTodo" msprop:Generator_UserTableName="Todo">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Data1" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Data1" msprop:Generator_ColumnPropNameInTable="Data1Column" msprop:Generator_ColumnVarNameInTable="columnData1" msprop:Generator_UserColumnName="Data1" type="xs:int" />
              <xs:element name="Data2" msprop:Generator_ColumnPropNameInRow="Data2" msprop:Generator_ColumnPropNameInTable="Data2Column" msprop:Generator_ColumnVarNameInTable="columnData2" msprop:Generator_UserColumnName="Data2" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Todo" />
      <xs:field xpath="mstns:Data1" />
    </xs:unique>
  </xs:element>
</xs:schema>